AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app
  
  Sample SAM Template for app

Globals:
  Function:
    Timeout: 30
    MemorySize: 256

Resources:
  LambdaFunction:
    Type: AWS::Serverless::Function
    Metadata:
      DockerContext: ./app
      Dockerfile: Dockerfile
    Properties:
      FunctionName: sam-app
      Role: !GetAtt LambdaFunctionRole.Arn
      PackageType: Image
      Architectures:
        - x86_64
      Environment:
        Variables:
          PARAM1: VALUE

  LambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: sam-app-role
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonVPCFullAccess
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: sample-lambda-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'logs:*'
                Resource: '*'

  LambdaFunctionUrl:
    Type: AWS::Lambda::Url
    Properties:
      TargetFunctionArn: !GetAtt LambdaFunction.Arn
      AuthType: NONE
      Cors:
        AllowMethods: [ 'GET', 'POST', 'PUT', 'DELETE','HEAD', 'PATCH' ]
        AllowOrigins: [ '*' ]

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaFunction
      Principal: "*"

Outputs:
  Endpoint:
    Description: URL for function
    Value: !GetAtt LambdaFunctionUrl.FunctionUrl